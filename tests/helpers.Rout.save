
pqR version 2.15.0 (2015-00-00), based on R 2.15.0 (2012-03-30)

R 2.15.0 is Copyright (C) 2012 The R Foundation for Statistical Computing
ISBN 3-900051-07-0

Modifications to R in pqR are Copyright (C) 2013-2015 Radford M. Neal

Some modules are from R-2.15.1 or later versions distributed by the R Core Team

Platform: x86_64-unknown-linux-gnu (64-bit)
No helper threads, task merging enabled.

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> # Test operations done in helper threads or with task merging, against
> # saved results and results with multithreading and merging disabled.
> #
> # Added for pqR, 2014, Radford M. Neal.
> 
> # These tests are designed for pqR, but should run without error in 
> # other R implementations, since the option settings should simply
> # be ignored.  The number of helper threads used can be set using
> # the R_HELPERS environment variable.
> 
> 
> # The test procedure.  Returns a list with scalars a, b, c, d, e, f, g, h, 
> # vectors t, u, v, w, and matrices X, Y, Z.  Contains lots of code generated
> # randomly with the script given.
> 
> do_helpers_tests <- function(len,seed=1)
+ {
+     set.seed(seed)
+ 
+     gen <- function (n) sample(c(-1,+1),1) * (rpois(n,2) + 1)
+ 
+     a <- gen(1); b <- gen(1); c <- gen(1); d <- gen(1)
+     e <- gen(1); f <- gen(1); g <- gen(1); h <- gen(1)
+ 
+     t <- gen(len); u <- gen(len); v <- gen(len); w <- gen(len);
+ 
+     X <- matrix(gen(len*len),len,len)
+     Y <- matrix(gen(len*len),len,len)
+     Z <- matrix(gen(len*len),len,len)
+ 
+     # The operations below were randomly generated with the following script:
+     #
+     # set.seed(1)
+     # 
+     # svars <- c("a","b","c","d","e","f","g","h")
+     # vvars <- c("t","u","v","w")
+     # mvars <- c("X","Y","Z")
+     # arith <- c("+","-")
+     # sp <- "   "
+     # 
+     # for (i in 1:400) {
+     #     P <- runif(1)
+     #     Q <- runif(1)
+     #     R <- runif(1)
+     #     if (P<0.1) {
+     #         dst <- sample(svars,1)
+     #         if (Q<0.4)
+     #             cat(sp,dst,"<- 2 *",dst,"+ sum(",sample(vvars,1),")\n")
+     #         else if (Q<0.8)
+     #             cat(sp,dst,"<- 2 *",dst,"+ sum(",sample(mvars,1),")\n")
+     #         else
+     #             cat(sp,dst,"<- 2 *",dst,"+ as.vector( t(",
+     #                            sample(vvars,1),") %*%",sample(vvars,1),")\n")
+     #     }
+     #     else if (P<0.6) {
+     #         dst <- sample(vvars,1)
+     #         if (Q<0.1)
+     #             if (R<0.5)
+     #                 cat(sp,dst,"<-",dst,sample(arith,1),"2\n")
+     #             else
+     #                 cat(sp,dst,"<- 2",sample(arith,1),dst,"\n")
+     #         else if (Q<0.2)
+     #             if (R<0.5)
+     #                 cat(sp,dst,"<- t( t(",dst,") %*%",sample(mvars,1),")\n")
+     #             else
+     #                 cat(sp,dst,"<-",sample(mvars,1),"%*%",dst,"\n")
+     #         else if (Q<0.25)
+     #             if (R<0.5)
+     #                 cat(sp,dst,"<-",dst,"+ colSums(",sample(mvars,1),")\n")
+     #             else
+     #                 cat(sp,dst,"<-",dst,"+ rowSums(",sample(mvars,1),")\n")
+     #         else if (Q<0.4)
+     #             if (R<0.5)
+     #                 cat(sp,dst,"<- floor(1 + 0.03 *",dst,")\n")
+     #             else
+     #                 cat(sp,dst,"<- floor(1 - 0.03 *",dst,")\n")
+     #         else if (Q<0.5)
+     #             if (R<0.5)
+     #                 cat(sp,dst,"<- floor(5 / (1 + exp(-",dst,")))\n")
+     #             else
+     #                 cat(sp,dst,"<- -floor(5 / (1 + exp(",dst,")))\n")
+     #         else if (Q<0.65)
+     #             cat(sp,dst,"<- ceiling(log(1 +",dst,"^ 2))\n")
+     #         else
+     #             if (R<0.5)
+     #                 cat(sp,dst,"<-",dst,sample(arith,1),
+     #                                   sample(setdiff(vvars,dst),1),"\n")
+     #             else
+     #                 cat(sp,dst,"<-",sample(setdiff(vvars,dst),1),
+     #                                   sample(arith,1),dst,"\n")
+     #     }
+     #     else {
+     #         dst <- sample(mvars,1)
+     #         if (Q<0.1)
+     #             cat(sp,dst,"<- t(",dst,")\n")
+     #         else if (Q<0.2)
+     #             if (R<0.5)
+     #                 cat(sp,dst,"<-",dst,sample(arith,1),"2\n")
+     #             else
+     #                 cat(sp,dst,"<- 2",sample(arith,1),dst,"\n")
+     #         else if (Q<0.3)
+     #             if (R<0.5)
+     #                 cat(sp,dst,"<-",dst,sample(arith,1),
+     #                                   sample(setdiff(mvars,dst),1),"\n")
+     #             else
+     #                 cat(sp,dst,"<-",sample(setdiff(mvars,dst),1),
+     #                                   sample(arith,1),dst,"\n")
+     #         else if (Q<0.4)
+     #             if (R<0.5)
+     #                 cat(sp,dst,"<- floor(1 + 0.05 *",dst,")\n")
+     #             else
+     #                 cat(sp,dst,"<- floor(1 - 0.05 *",dst,")\n")
+     #         else if (Q<0.65)
+     #             cat(sp,dst,"<- ceiling(log(1 +",dst,"^ 2))\n")
+     #         else if (Q<0.8)
+     #             if (R<0.5)
+     #                 cat(sp,dst,"<- floor(5 / (1 + exp(-",dst,")))\n")
+     #             else
+     #                 cat(sp,dst,"<- -floor(5 / (1 + exp(",dst,")))\n")
+     #         else if (Q<0.85)
+     #             if (R<0.5)
+     #                 cat(sp,dst,"<- crossprod(",dst,")\n")
+     #             else
+     #                 cat(sp,dst,"<- tcrossprod(",dst,")\n")
+     #         else if (Q<0.90)
+     #             if (R<0.5)
+     #                 cat(sp,dst,"<- crossprod(",dst,",",sample(mvars,1),")\n")
+     #             else
+     #                 cat(sp,dst,"<- crossprod(",sample(mvars,1),",",dst,")\n")
+     #         else if (Q<0.95)
+     #             if (R<0.5)
+     #                 cat(sp,dst,"<- tcrossprod(",dst,",",sample(mvars,1),")\n")
+     #             else
+     #                 cat(sp,dst,"<- tcrossprod(",sample(mvars,1),",",dst,")\n")
+     #         else
+     #             if (R<0.5)
+     #                 cat(sp,dst,"<-",dst,"%*%",sample(mvars,1),"\n")
+     #             else
+     #                 cat(sp,dst,"<-",sample(mvars,1),"%*%",dst,"\n")
+     #     }
+     # }
+ 
+     w <- floor(1 - 0.03 * w )
+     v <- u + v 
+     u <- Z %*% u 
+     u <- w - u 
+     u <- u + t 
+     u <- u - v 
+     w <- t - w 
+     w <- u - w 
+     Z <- t( Z )
+     Y <- ceiling(log(1 + Y ^ 2))
+     u <- u - 2
+     X <- ceiling(log(1 + X ^ 2))
+     u <- floor(1 - 0.03 * u )
+     w <- w + v 
+     w <- floor(1 + 0.03 * w )
+     Z <- floor(1 - 0.05 * Z )
+     u <- u - t 
+     X <- X + 2
+     g <- 2 * g + sum( Z )
+     v <- -floor(5 / (1 + exp( v )))
+     Z <- floor(1 + 0.05 * Z )
+     Y <- Y - Z 
+     Y <- floor(5 / (1 + exp(- Y )))
+     t <- 2 + t 
+     Y <- Y %*% X 
+     X <- ceiling(log(1 + X ^ 2))
+     t <- ceiling(log(1 + t ^ 2))
+     e <- 2 * e + sum( Y )
+     v <- u + v 
+     t <- t - u 
+     X <- ceiling(log(1 + X ^ 2))
+     v <- ceiling(log(1 + v ^ 2))
+     c <- 2 * c + sum( w )
+     u <- t + u 
+     Z <- floor(1 - 0.05 * Z )
+     Z <- floor(1 + 0.05 * Z )
+     Z <- -floor(5 / (1 + exp( Z )))
+     v <- Z %*% v 
+     w <- u - w 
+     u <- Y %*% u 
+     w <- w + t 
+     v <- floor(1 + 0.03 * v )
+     v <- t( t( v ) %*% Z )
+     w <- t - w 
+     X <- X %*% X 
+     v <- ceiling(log(1 + v ^ 2))
+     w <- w + 2
+     u <- floor(1 - 0.03 * u )
+     Y <- -floor(5 / (1 + exp( Y )))
+     w <- floor(1 - 0.03 * w )
+     u <- floor(5 / (1 + exp(- u )))
+     w <- -floor(5 / (1 + exp( w )))
+     Y <- ceiling(log(1 + Y ^ 2))
+     u <- u + colSums( Z )
+     w <- floor(1 + 0.03 * w )
+     Z <- Z - 2
+     u <- u + 2
+     t <- t( t( t ) %*% Y )
+     Z <- t( Z )
+     u <- u + 2
+     t <- t + colSums( Z )
+     t <- ceiling(log(1 + t ^ 2))
+     v <- 2 + v 
+     w <- floor(5 / (1 + exp(- w )))
+     u <- u + t 
+     Y <- floor(5 / (1 + exp(- Y )))
+     e <- 2 * e + sum( v )
+     w <- -floor(5 / (1 + exp( w )))
+     X <- tcrossprod( X )
+     Y <- Y %*% Z 
+     b <- 2 * b + sum( v )
+     Y <- Y %*% Y 
+     X <- X + Z 
+     u <- 2 - u 
+     w <- w + t 
+     v <- v - t 
+     Y <- floor(5 / (1 + exp(- Y )))
+     t <- t + v 
+     Y <- Y - 2
+     X <- X %*% Z 
+     X <- 2 + X 
+     Y <- ceiling(log(1 + Y ^ 2))
+     X <- floor(1 + 0.05 * X )
+     Z <- 2 - Z 
+     X <- floor(1 - 0.05 * X )
+     Z <- Z %*% Z 
+     X <- ceiling(log(1 + X ^ 2))
+     Y <- crossprod( Y )
+     Y <- Y + 2
+     Z <- tcrossprod( Z )
+     a <- 2 * a + sum( w )
+     Z <- t( Z )
+     e <- 2 * e + sum( u )
+     t <- floor(1 - 0.03 * t )
+     c <- 2 * c + as.vector( t( t ) %*% t )
+     Y <- ceiling(log(1 + Y ^ 2))
+     a <- 2 * a + sum( u )
+     t <- v - t 
+     u <- t + u 
+     Z <- ceiling(log(1 + Z ^ 2))
+     Z <- 2 - Z 
+     w <- t( t( w ) %*% X )
+     b <- 2 * b + as.vector( t( u ) %*% u )
+     t <- ceiling(log(1 + t ^ 2))
+     v <- u - v 
+     v <- w + v 
+     b <- 2 * b + sum( Y )
+     w <- floor(1 - 0.03 * w )
+     Y <- floor(1 + 0.05 * Y )
+     Z <- tcrossprod( Z )
+     Y <- ceiling(log(1 + Y ^ 2))
+     u <- t( t( u ) %*% Y )
+     w <- ceiling(log(1 + w ^ 2))
+     X <- floor(1 + 0.05 * X )
+     Z <- floor(1 - 0.05 * Z )
+     Z <- ceiling(log(1 + Z ^ 2))
+     X <- floor(1 + 0.05 * X )
+     X <- tcrossprod( X )
+     v <- t - v 
+     u <- u + t 
+     Y <- ceiling(log(1 + Y ^ 2))
+     Z <- floor(5 / (1 + exp(- Z )))
+     Y <- t( Y )
+     f <- 2 * f + sum( Y )
+     w <- u + w 
+     w <- floor(1 + 0.03 * w )
+     Z <- 2 - Z 
+     t <- floor(1 - 0.03 * t )
+     Y <- floor(1 - 0.05 * Y )
+     Y <- ceiling(log(1 + Y ^ 2))
+     X <- t( X )
+     v <- t( t( v ) %*% X )
+     Z <- ceiling(log(1 + Z ^ 2))
+     u <- floor(1 - 0.03 * u )
+     v <- v - 2
+     X <- floor(1 - 0.05 * X )
+     Z <- Z - Y 
+     Y <- crossprod( Y )
+     v <- v - 2
+     X <- floor(1 - 0.05 * X )
+     Z <- floor(1 - 0.05 * Z )
+     w <- floor(1 - 0.03 * w )
+     v <- u + v 
+     w <- floor(1 + 0.03 * w )
+     Y <- 2 - Y 
+     w <- floor(5 / (1 + exp(- w )))
+     e <- 2 * e + sum( Y )
+     w <- w + v 
+     Y <- -floor(5 / (1 + exp( Y )))
+     h <- 2 * h + sum( Z )
+     Z <- ceiling(log(1 + Z ^ 2))
+     t <- floor(5 / (1 + exp(- t )))
+     v <- v - w 
+     v <- v + t 
+     X <- ceiling(log(1 + X ^ 2))
+     Z <- Z + X 
+     u <- ceiling(log(1 + u ^ 2))
+     w <- floor(1 + 0.03 * w )
+     w <- w - t 
+     t <- t( t( t ) %*% Z )
+     w <- w + t 
+     w <- ceiling(log(1 + w ^ 2))
+     X <- ceiling(log(1 + X ^ 2))
+     X <- ceiling(log(1 + X ^ 2))
+     Z <- Y - Z 
+     v <- v + u 
+     h <- 2 * h + sum( u )
+     v <- ceiling(log(1 + v ^ 2))
+     X <- floor(1 - 0.05 * X )
+     Z <- floor(5 / (1 + exp(- Z )))
+     t <- t + v 
+     v <- v - w 
+     v <- v - w 
+     Y <- t( Y )
+     w <- v - w 
+     w <- ceiling(log(1 + w ^ 2))
+     X <- ceiling(log(1 + X ^ 2))
+     u <- floor(5 / (1 + exp(- u )))
+     c <- 2 * c + sum( Z )
+     X <- t( X )
+     b <- 2 * b + sum( t )
+     a <- 2 * a + sum( t )
+     v <- -floor(5 / (1 + exp( v )))
+     g <- 2 * g + sum( X )
+     u <- u - 2
+     Z <- floor(1 - 0.05 * Z )
+     Z <- ceiling(log(1 + Z ^ 2))
+     X <- ceiling(log(1 + X ^ 2))
+     c <- 2 * c + sum( t )
+     t <- t - 2
+     X <- X + Y 
+     v <- v - 2
+     Y <- t( Y )
+     w <- t - w 
+     Z <- t( Z )
+     Y <- Z - Y 
+     w <- floor(1 - 0.03 * w )
+     X <- ceiling(log(1 + X ^ 2))
+     u <- u + v 
+     Z <- -floor(5 / (1 + exp( Z )))
+     g <- 2 * g + sum( v )
+     u <- u + v 
+     u <- X %*% u 
+     v <- w - v 
+     t <- t + v 
+     X <- crossprod( X )
+     Y <- floor(1 + 0.05 * Y )
+     v <- floor(1 - 0.03 * v )
+     t <- -floor(5 / (1 + exp( t )))
+     u <- t + u 
+     w <- w + t 
+     v <- ceiling(log(1 + v ^ 2))
+     Z <- ceiling(log(1 + Z ^ 2))
+     u <- t + u 
+     g <- 2 * g + as.vector( t( t ) %*% w )
+     v <- floor(1 + 0.03 * v )
+     w <- floor(5 / (1 + exp(- w )))
+     Y <- Y - 2
+     v <- v + colSums( Y )
+     u <- -floor(5 / (1 + exp( u )))
+     v <- v + w 
+     Y <- 2 - Y 
+     h <- 2 * h + sum( t )
+     t <- t - v 
+     u <- 2 - u 
+     u <- u + v 
+     v <- ceiling(log(1 + v ^ 2))
+     Z <- ceiling(log(1 + Z ^ 2))
+     t <- -floor(5 / (1 + exp( t )))
+     t <- v - t 
+     Y <- floor(5 / (1 + exp(- Y )))
+     u <- Y %*% u 
+     Z <- floor(1 + 0.05 * Z )
+     e <- 2 * e + sum( X )
+     X <- floor(1 - 0.05 * X )
+     Z <- ceiling(log(1 + Z ^ 2))
+     X <- X + Z 
+     u <- floor(5 / (1 + exp(- u )))
+     w <- floor(1 - 0.03 * w )
+     w <- t( t( w ) %*% X )
+     X <- ceiling(log(1 + X ^ 2))
+     X <- 2 - X 
+     X <- X %*% X 
+     u <- floor(1 + 0.03 * u )
+     u <- floor(1 - 0.03 * u )
+     X <- Z - X 
+     t <- -floor(5 / (1 + exp( t )))
+     X <- floor(5 / (1 + exp(- X )))
+     u <- floor(1 + 0.03 * u )
+     Y <- Y + 2
+     b <- 2 * b + sum( Y )
+     v <- t + v 
+     v <- w - v 
+     Z <- crossprod( Z , X )
+     Y <- t( Y )
+     Y <- Y %*% X 
+     w <- 2 + w 
+     w <- w - 2
+     t <- floor(1 + 0.03 * t )
+     d <- 2 * d + as.vector( t( u ) %*% v )
+     u <- ceiling(log(1 + u ^ 2))
+     Z <- tcrossprod( Z , Z )
+     g <- 2 * g + sum( w )
+     v <- t( t( v ) %*% Z )
+     c <- 2 * c + sum( v )
+     w <- floor(1 - 0.03 * w )
+     d <- 2 * d + sum( w )
+     X <- -floor(5 / (1 + exp( X )))
+     X <- -floor(5 / (1 + exp( X )))
+     w <- floor(1 - 0.03 * w )
+     u <- floor(1 - 0.03 * u )
+     w <- 2 + w 
+     d <- 2 * d + sum( Y )
+     b <- 2 * b + sum( Z )
+     Y <- floor(5 / (1 + exp(- Y )))
+     Y <- ceiling(log(1 + Y ^ 2))
+     w <- t + w 
+     X <- ceiling(log(1 + X ^ 2))
+     Z <- floor(1 + 0.05 * Z )
+     w <- w + 2
+     Z <- t( Z )
+     Z <- ceiling(log(1 + Z ^ 2))
+     w <- t( t( w ) %*% X )
+     t <- t( t( t ) %*% Z )
+     X <- t( X )
+     v <- v + rowSums( X )
+     w <- t + w 
+     u <- floor(1 - 0.03 * u )
+     t <- ceiling(log(1 + t ^ 2))
+     w <- floor(1 - 0.03 * w )
+     Y <- crossprod( Y )
+     X <- ceiling(log(1 + X ^ 2))
+     h <- 2 * h + sum( v )
+     t <- ceiling(log(1 + t ^ 2))
+     Z <- floor(5 / (1 + exp(- Z )))
+     X <- floor(1 - 0.05 * X )
+     Y <- Y %*% Z 
+     t <- t + 2
+     u <- 2 - u 
+     Y <- floor(1 - 0.05 * Y )
+     X <- -floor(5 / (1 + exp( X )))
+     v <- v + 2
+     Y <- t( Y )
+     v <- v - w 
+     t <- t - w 
+     t <- floor(5 / (1 + exp(- t )))
+     X <- ceiling(log(1 + X ^ 2))
+     Z <- crossprod( Z )
+     c <- 2 * c + sum( u )
+     X <- floor(1 + 0.05 * X )
+     t <- u - t 
+     Y <- Y - 2
+     t <- u + t 
+     w <- w - t 
+     Z <- t( Z )
+     Z <- Y - Z 
+     t <- 2 - t 
+     v <- floor(1 - 0.03 * v )
+     f <- 2 * f + sum( Z )
+     Z <- crossprod( Z )
+     u <- floor(1 + 0.03 * u )
+     X <- -floor(5 / (1 + exp( X )))
+     Y <- ceiling(log(1 + Y ^ 2))
+     Z <- Z %*% X 
+     Y <- 2 + Y 
+     t <- floor(1 + 0.03 * t )
+     Z <- crossprod( Z )
+     t <- -floor(5 / (1 + exp( t )))
+     e <- 2 * e + as.vector( t( w ) %*% u )
+     X <- crossprod( Z , X )
+     Z <- t( Z )
+     Y <- crossprod( X , Y )
+     u <- w - u 
+     u <- u + rowSums( Z )
+     Y <- tcrossprod( Y )
+     Y <- ceiling(log(1 + Y ^ 2))
+     t <- t + u 
+     a <- 2 * a + sum( t )
+     g <- 2 * g + sum( t )
+     t <- floor(1 + 0.03 * t )
+     v <- v - w 
+     Z <- floor(1 + 0.05 * Z )
+     X <- ceiling(log(1 + X ^ 2))
+     Z <- crossprod( Z , Y )
+     Z <- Z %*% X 
+     a <- 2 * a + sum( Z )
+     g <- 2 * g + sum( Y )
+     X <- floor(1 - 0.05 * X )
+     t <- u + t 
+     Y <- floor(5 / (1 + exp(- Y )))
+     u <- floor(1 + 0.03 * u )
+     Z <- ceiling(log(1 + Z ^ 2))
+     u <- ceiling(log(1 + u ^ 2))
+     X <- crossprod( Y , X )
+     X <- 2 + X 
+     Z <- ceiling(log(1 + Z ^ 2))
+     Z <- crossprod( Z , X )
+     Z <- ceiling(log(1 + Z ^ 2))
+     t <- ceiling(log(1 + t ^ 2))
+     Z <- ceiling(log(1 + Z ^ 2))
+     X <- floor(5 / (1 + exp(- X )))
+     u <- 2 + u 
+     u <- u + colSums( X )
+     Y <- floor(1 + 0.05 * Y )
+     w <- w - t 
+     v <- floor(1 - 0.03 * v )
+     Y <- tcrossprod( Y , Z )
+     e <- 2 * e + sum( Y )
+     f <- 2 * f + as.vector( t( u ) %*% u )
+     c <- 2 * c + sum( u )
+     t <- ceiling(log(1 + t ^ 2))
+     Y <- t( Y )
+     u <- u - v 
+     v <- ceiling(log(1 + v ^ 2))
+     Y <- floor(1 - 0.05 * Y )
+     t <- t + rowSums( X )
+     e <- 2 * e + sum( X )
+     t <- floor(1 - 0.03 * t )
+     w <- Y %*% w 
+     Z <- 2 + Z 
+     c <- 2 * c + sum( t )
+     v <- ceiling(log(1 + v ^ 2))
+     v <- Y %*% v 
+     t <- t + rowSums( Y )
+     t <- v - t 
+     X <- floor(1 - 0.05 * X )
+     w <- ceiling(log(1 + w ^ 2))
+     Y <- Z - Y 
+     w <- ceiling(log(1 + w ^ 2))
+     h <- 2 * h + sum( Z )
+     Y <- t( Y )
+     X <- X + 2
+     Z <- ceiling(log(1 + Z ^ 2))
+     Z <- ceiling(log(1 + Z ^ 2))
+     d <- 2 * d + as.vector( t( t ) %*% t )
+     w <- u - w 
+     Y <- t( Y )
+     u <- Z %*% u 
+     X <- floor(1 - 0.05 * X )
+     t <- t( t( t ) %*% Z )
+ 
+     # End of randomly generated operations.
+ 
+     list(a=a,b=b,c=c,d=d,e=e,f=f,g=g,h=h,t=t,u=u,v=v,w=w,X=X,Y=Y,Z=Z)
+ }
> 
> 
> # Print results of test.
> 
> show_results <- function (R)
+ {
+     print(rbind (`sums:`=unlist(lapply(R,sum,na.rm=TRUE)),
+                  `NaNs:`=unlist(lapply(R,function(x)sum(is.na(x))))))
+ }
> 
> 
> # Do tests for varying dimensions of vectors and matrices, under four
> # conditions of multithreading and/or task merging being enabled.
> 
> for (len in c(1,2,21,22,127,128,129,201,202))
+ {
+     cat("\n\nTESTING WITH DIMENSION",len,"\n\n")
+     cat("Tests with helpers disabled:\n")
+     options(helpers_disable=T)
+     R0 <- do_helpers_tests(len)
+     show_results(R0)
+     
+     cat("\nTests with task merging but no multithreading:\n")
+     options(helpers_disable=F)
+     options(helpers_no_multithreading=T)
+     options(helpers_no_merging=F)
+     R <- do_helpers_tests(len)
+     show_results(R)
+     stopifnot(identical(R,R0))
+     
+     cat("\nTests with no task merging and multithreading:\n")
+     options(helpers_disable=F)
+     options(helpers_no_multithreading=F)
+     options(helpers_no_merging=T)
+     R <- do_helpers_tests(len)
+     show_results(R)
+     stopifnot(identical(R,R0))
+     
+     cat("\nTests with both task merging and multithreading:\n")
+     options(helpers_disable=F)
+     options(helpers_no_multithreading=F)
+     options(helpers_no_merging=F)
+     R <- do_helpers_tests(len)
+     show_results(R)
+     stopifnot(identical(R,R0))
+ }


TESTING WITH DIMENSION 1 

Tests with helpers disabled:
            a    b     c  d    e   f     g  h t  u v  w X Y Z
sums: 1016204 1021 -1262 64 1812 325 41679 60 0 54 0 18 0 6 3
NaNs:       0    0     0  0    0   0     0  0 0  0 0  0 0 0 0

Tests with task merging but no multithreading:
            a    b     c  d    e   f     g  h t  u v  w X Y Z
sums: 1016204 1021 -1262 64 1812 325 41679 60 0 54 0 18 0 6 3
NaNs:       0    0     0  0    0   0     0  0 0  0 0  0 0 0 0

Tests with no task merging and multithreading:
            a    b     c  d    e   f     g  h t  u v  w X Y Z
sums: 1016204 1021 -1262 64 1812 325 41679 60 0 54 0 18 0 6 3
NaNs:       0    0     0  0    0   0     0  0 0  0 0  0 0 0 0

Tests with both task merging and multithreading:
            a    b     c  d    e   f     g  h t  u v  w X Y Z
sums: 1016204 1021 -1262 64 1812 325 41679 60 0 54 0 18 0 6 3
NaNs:       0    0     0  0    0   0     0  0 0  0 0  0 0 0 0


TESTING WITH DIMENSION 2 

Tests with helpers disabled:
                 a    b     c   d     e    f         g    h t   u v  w X  Y  Z
sums: 248992517664 2160 -5488 312 17376 1984 723395232 -996 0 408 0 68 0 28 12
NaNs:            0    0     0   0     0    0         0    0 0   0 0  0 0  0  0

Tests with task merging but no multithreading:
                 a    b     c   d     e    f         g    h t   u v  w X  Y  Z
sums: 248992517664 2160 -5488 312 17376 1984 723395232 -996 0 408 0 68 0 28 12
NaNs:            0    0     0   0     0    0         0    0 0   0 0  0 0  0  0

Tests with no task merging and multithreading:
                 a    b     c   d     e    f         g    h t   u v  w X  Y  Z
sums: 248992517664 2160 -5488 312 17376 1984 723395232 -996 0 408 0 68 0 28 12
NaNs:            0    0     0   0     0    0         0    0 0   0 0  0 0  0  0

Tests with both task merging and multithreading:
                 a    b     c   d     e    f         g    h t   u v  w X  Y  Z
sums: 248992517664 2160 -5488 312 17376 1984 723395232 -996 0 408 0 68 0 28 12
NaNs:            0    0     0   0     0    0         0    0 0   0 0  0 0  0  0


TESTING WITH DIMENSION 21 

Tests with helpers disabled:
                 a        b           c        d        e        f            g
sums: 8.038617e+27 36846521 -1764305604 11677245 18955690 -1363126 3.370733e+22
NaNs: 0.000000e+00        0           0        0        0        0 0.000000e+00
               h        t        u      v      w X    Y    Z
sums: -441076407 -1296540 16835616 -18522 200298 0 7056 1764
NaNs:          0        0        0      0      0 0    0    0

Tests with task merging but no multithreading:
                 a        b           c        d        e        f            g
sums: 8.038617e+27 36846521 -1764305604 11677245 18955690 -1363126 3.370733e+22
NaNs: 0.000000e+00        0           0        0        0        0 0.000000e+00
               h        t        u      v      w X    Y    Z
sums: -441076407 -1296540 16835616 -18522 200298 0 7056 1764
NaNs:          0        0        0      0      0 0    0    0

Tests with no task merging and multithreading:
                 a        b           c        d        e        f            g
sums: 8.038617e+27 36846521 -1764305604 11677245 18955690 -1363126 3.370733e+22
NaNs: 0.000000e+00        0           0        0        0        0 0.000000e+00
               h        t        u      v      w X    Y    Z
sums: -441076407 -1296540 16835616 -18522 200298 0 7056 1764
NaNs:          0        0        0      0      0 0    0    0

Tests with both task merging and multithreading:
                 a        b           c        d        e        f            g
sums: 8.038617e+27 36846521 -1764305604 11677245 18955690 -1363126 3.370733e+22
NaNs: 0.000000e+00        0           0        0        0        0 0.000000e+00
               h        t        u      v      w X    Y    Z
sums: -441076407 -1296540 16835616 -18522 200298 0 7056 1764
NaNs:          0        0        0      0      0 0    0    0


TESTING WITH DIMENSION 22 

Tests with helpers disabled:
                 a        b           c        d        e        f            g
sums: 1.741913e+28 46442408 -2226349644 13426208 21782120 -1648938 6.528762e+22
NaNs: 0.000000e+00        0           0        0        0        0 0.000000e+00
               h        t        u      v      w X    Y    Z
sums: -556585516 -1490720 22221408 -20328 252384 0 7744 1936
NaNs:          0        0        0      0      0 0    0    0

Tests with task merging but no multithreading:
                 a        b           c        d        e        f            g
sums: 1.741913e+28 46442408 -2226349644 13426208 21782120 -1648938 6.528762e+22
NaNs: 0.000000e+00        0           0        0        0        0 0.000000e+00
               h        t        u      v      w X    Y    Z
sums: -556585516 -1490720 22221408 -20328 252384 0 7744 1936
NaNs:          0        0        0      0      0 0    0    0

Tests with no task merging and multithreading:
                 a        b           c        d        e        f            g
sums: 1.741913e+28 46442408 -2226349644 13426208 21782120 -1648938 6.528762e+22
NaNs: 0.000000e+00        0           0        0        0        0 0.000000e+00
               h        t        u      v      w X    Y    Z
sums: -556585516 -1490720 22221408 -20328 252384 0 7744 1936
NaNs:          0        0        0      0      0 0    0    0

Tests with both task merging and multithreading:
                 a        b           c        d        e        f            g
sums: 1.741913e+28 46442408 -2226349644 13426208 21782120 -1648938 6.528762e+22
NaNs: 0.000000e+00        0           0        0        0        0 0.000000e+00
               h        t        u      v      w X    Y    Z
sums: -556585516 -1490720 22221408 -20328 252384 0 7744 1936
NaNs:          0        0        0      0      0 0    0    0


TESTING WITH DIMENSION 127 

Tests with helpers disabled:
                 a            b            c            d          e
sums: 1.730414e+41 297376924107 5.804181e+14 194391791096 4203210118
NaNs: 0.000000e+00            0 0.000000e+00            0          0
                f            g            h           t             u        v
sums: -1727923281 8.826843e+33 1.451045e+14 -2523607856 -3.317088e+13 -5677408
NaNs:           0 0.000000e+00 0.000000e+00           0  0.000000e+00        0
                 w X      Y     Z
sums: -65297015837 0 854837 64516
NaNs:            0 0      0     0

Tests with task merging but no multithreading:
                 a            b            c            d          e
sums: 1.730414e+41 297376924107 5.804181e+14 194391791096 4203210118
NaNs: 0.000000e+00            0 0.000000e+00            0          0
                f            g            h           t             u        v
sums: -1727923281 8.826843e+33 1.451045e+14 -2523607856 -3.317088e+13 -5677408
NaNs:           0 0.000000e+00 0.000000e+00           0  0.000000e+00        0
                 w X      Y     Z
sums: -65297015837 0 854837 64516
NaNs:            0 0      0     0

Tests with no task merging and multithreading:
                 a            b            c            d          e
sums: 1.730414e+41 297376924107 5.804181e+14 194391791096 4203210118
NaNs: 0.000000e+00            0 0.000000e+00            0          0
                f            g            h           t             u        v
sums: -1727923281 8.826843e+33 1.451045e+14 -2523607856 -3.317088e+13 -5677408
NaNs:           0 0.000000e+00 0.000000e+00           0  0.000000e+00        0
                 w X      Y     Z
sums: -65297015837 0 854837 64516
NaNs:            0 0      0     0

Tests with both task merging and multithreading:
                 a            b            c            d          e
sums: 1.730414e+41 297376924107 5.804181e+14 194391791096 4203210118
NaNs: 0.000000e+00            0 0.000000e+00            0          0
                f            g            h           t             u        v
sums: -1727923281 8.826843e+33 1.451045e+14 -2523607856 -3.317088e+13 -5677408
NaNs:           0 0.000000e+00 0.000000e+00           0  0.000000e+00        0
                 w X      Y     Z
sums: -65297015837 0 854837 64516
NaNs:            0 0      0     0


TESTING WITH DIMENSION 128 

Tests with helpers disabled:
                 a          b            c          d          e           f
sums: 1.974883e+41 3.0927e+11 6.085797e+14 1.9902e+11 4302732928 -1782524816
NaNs: 0.000000e+00 0.0000e+00 0.000000e+00 0.0000e+00          0           0
                 g            h           t             u        v            w
sums: 9.917093e+33 1.521449e+14 -2583691264 -3.505418e+13 -5767168 -68465197056
NaNs: 0.000000e+00 0.000000e+00           0  0.000000e+00        0            0
      X      Y     Z
sums: 0 868352 65536
NaNs: 0      0     0

Tests with task merging but no multithreading:
                 a          b            c          d          e           f
sums: 1.974883e+41 3.0927e+11 6.085797e+14 1.9902e+11 4302732928 -1782524816
NaNs: 0.000000e+00 0.0000e+00 0.000000e+00 0.0000e+00          0           0
                 g            h           t             u        v            w
sums: 9.917093e+33 1.521449e+14 -2583691264 -3.505418e+13 -5767168 -68465197056
NaNs: 0.000000e+00 0.000000e+00           0  0.000000e+00        0            0
      X      Y     Z
sums: 0 868352 65536
NaNs: 0      0     0

Tests with no task merging and multithreading:
                 a          b            c          d          e           f
sums: 1.974883e+41 3.0927e+11 6.085797e+14 1.9902e+11 4302732928 -1782524816
NaNs: 0.000000e+00 0.0000e+00 0.000000e+00 0.0000e+00          0           0
                 g            h           t             u        v            w
sums: 9.917093e+33 1.521449e+14 -2583691264 -3.505418e+13 -5767168 -68465197056
NaNs: 0.000000e+00 0.000000e+00           0  0.000000e+00        0            0
      X      Y     Z
sums: 0 868352 65536
NaNs: 0      0     0

Tests with both task merging and multithreading:
                 a          b            c          d          e           f
sums: 1.974883e+41 3.0927e+11 6.085797e+14 1.9902e+11 4302732928 -1782524816
NaNs: 0.000000e+00 0.0000e+00 0.000000e+00 0.0000e+00          0           0
                 g            h           t             u        v            w
sums: 9.917093e+33 1.521449e+14 -2583691264 -3.505418e+13 -5767168 -68465197056
NaNs: 0.000000e+00 0.000000e+00           0  0.000000e+00        0            0
      X      Y     Z
sums: 0 868352 65536
NaNs: 0      0     0


TESTING WITH DIMENSION 129 

Tests with helpers disabled:
                 a            b            c            d          e
sums: 2.258454e+41 321540597005 6.378708e+14 213082749201 4406127090
NaNs: 0.000000e+00            0 0.000000e+00            0          0
                f            g            h           t             u        v
sums: -1838429197 1.113249e+34 1.594677e+14 -2704828140 -3.702839e+13 -5990760
NaNs:           0 0.000000e+00 0.000000e+00           0  0.000000e+00        0
                 w X      Y     Z
sums: -71760448434 0 898614 66564
NaNs:            0 0      0     0

Tests with task merging but no multithreading:
                 a            b            c            d          e
sums: 2.258454e+41 321540597005 6.378708e+14 213082749201 4406127090
NaNs: 0.000000e+00            0 0.000000e+00            0          0
                f            g            h           t             u        v
sums: -1838429197 1.113249e+34 1.594677e+14 -2704828140 -3.702839e+13 -5990760
NaNs:           0 0.000000e+00 0.000000e+00           0  0.000000e+00        0
                 w X      Y     Z
sums: -71760448434 0 898614 66564
NaNs:            0 0      0     0

Tests with no task merging and multithreading:
                 a            b            c            d          e
sums: 2.258454e+41 321540597005 6.378708e+14 213082749201 4406127090
NaNs: 0.000000e+00            0 0.000000e+00            0          0
                f            g            h           t             u        v
sums: -1838429197 1.113249e+34 1.594677e+14 -2704828140 -3.702839e+13 -5990760
NaNs:           0 0.000000e+00 0.000000e+00           0  0.000000e+00        0
                 w X      Y     Z
sums: -71760448434 0 898614 66564
NaNs:            0 0      0     0

Tests with both task merging and multithreading:
                 a            b            c            d          e
sums: 2.258454e+41 321540597005 6.378708e+14 213082749201 4406127090
NaNs: 0.000000e+00            0 0.000000e+00            0          0
                f            g            h           t             u        v
sums: -1838429197 1.113249e+34 1.594677e+14 -2704828140 -3.702839e+13 -5990760
NaNs:           0 0.000000e+00 0.000000e+00           0  0.000000e+00        0
                 w X      Y     Z
sums: -71760448434 0 898614 66564
NaNs:            0 0      0     0


TESTING WITH DIMENSION 201 

Tests with helpers disabled:
                 a            b            c            d           e
sums: 4.707339e+44 2.952851e+12 9.236119e+15 2.546913e+12 16680065072
NaNs: 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00           0
                 f            g           h            t            u         v
sums: -10701479005 8.171072e+36 2.30903e+15 -18190146240 -8.35407e+14 -25856640
NaNs:            0 0.000000e+00 0.00000e+00            0  0.00000e+00         0
                  w X       Y      Z
sums: -1.039063e+12 0 3636090 161604
NaNs:  0.000000e+00 0       0      0

Tests with task merging but no multithreading:
                 a            b            c            d           e
sums: 4.707339e+44 2.952851e+12 9.236119e+15 2.546913e+12 16680065072
NaNs: 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00           0
                 f            g           h            t            u         v
sums: -10701479005 8.171072e+36 2.30903e+15 -18190146240 -8.35407e+14 -25856640
NaNs:            0 0.000000e+00 0.00000e+00            0  0.00000e+00         0
                  w X       Y      Z
sums: -1.039063e+12 0 3636090 161604
NaNs:  0.000000e+00 0       0      0

Tests with no task merging and multithreading:
                 a            b            c            d           e
sums: 4.707339e+44 2.952851e+12 9.236119e+15 2.546913e+12 16680065072
NaNs: 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00           0
                 f            g           h            t            u         v
sums: -10701479005 8.171072e+36 2.30903e+15 -18190146240 -8.35407e+14 -25856640
NaNs:            0 0.000000e+00 0.00000e+00            0  0.00000e+00         0
                  w X       Y      Z
sums: -1.039063e+12 0 3636090 161604
NaNs:  0.000000e+00 0       0      0

Tests with both task merging and multithreading:
                 a            b            c            d           e
sums: 4.707339e+44 2.952851e+12 9.236119e+15 2.546913e+12 16680065072
NaNs: 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00           0
                 f            g           h            t            u         v
sums: -10701479005 8.171072e+36 2.30903e+15 -18190146240 -8.35407e+14 -25856640
NaNs:            0 0.000000e+00 0.00000e+00            0  0.00000e+00         0
                  w X       Y      Z
sums: -1.039063e+12 0 3636090 161604
NaNs:  0.000000e+00 0       0      0


TESTING WITH DIMENSION 202 

Tests with helpers disabled:
                 a            b            c            d           e
sums: 5.165833e+44 3.027038e+12 9.516602e+15 2.585117e+12 16928842648
NaNs: 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00           0
                 f            g           h            t             u
sums: -10914686216 8.798162e+36 2.37915e+15 -18462993920 -8.650591e+14
NaNs:            0 0.000000e+00 0.00000e+00            0  0.000000e+00
              v             w X       Y      Z
sums: -26114560 -1.070618e+12 0 3672360 163216
NaNs:         0  0.000000e+00 0       0      0

Tests with task merging but no multithreading:
                 a            b            c            d           e
sums: 5.165833e+44 3.027038e+12 9.516602e+15 2.585117e+12 16928842648
NaNs: 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00           0
                 f            g           h            t             u
sums: -10914686216 8.798162e+36 2.37915e+15 -18462993920 -8.650591e+14
NaNs:            0 0.000000e+00 0.00000e+00            0  0.000000e+00
              v             w X       Y      Z
sums: -26114560 -1.070618e+12 0 3672360 163216
NaNs:         0  0.000000e+00 0       0      0

Tests with no task merging and multithreading:
                 a            b            c            d           e
sums: 5.165833e+44 3.027038e+12 9.516602e+15 2.585117e+12 16928842648
NaNs: 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00           0
                 f            g           h            t             u
sums: -10914686216 8.798162e+36 2.37915e+15 -18462993920 -8.650591e+14
NaNs:            0 0.000000e+00 0.00000e+00            0  0.000000e+00
              v             w X       Y      Z
sums: -26114560 -1.070618e+12 0 3672360 163216
NaNs:         0  0.000000e+00 0       0      0

Tests with both task merging and multithreading:
                 a            b            c            d           e
sums: 5.165833e+44 3.027038e+12 9.516602e+15 2.585117e+12 16928842648
NaNs: 0.000000e+00 0.000000e+00 0.000000e+00 0.000000e+00           0
                 f            g           h            t             u
sums: -10914686216 8.798162e+36 2.37915e+15 -18462993920 -8.650591e+14
NaNs:            0 0.000000e+00 0.00000e+00            0  0.000000e+00
              v             w X       Y      Z
sums: -26114560 -1.070618e+12 0 3672360 163216
NaNs:         0  0.000000e+00 0       0      0
> 
> 
> # Test for bug that occurred before.
> 
> a <- invisible(rep(1.1,100000))  # invisible will wait until arg computed
> b <- invisible(rep(-2.2,100000))
> x <- abs(b%*%a)
> print(x)
       [,1]
[1,] 242000
> stopifnot(x>0)
> 
