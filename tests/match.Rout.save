
pqR version 2.15.1 (2017-06-09), based on R 2.15.0 (2012-03-30)

R 2.15.0 is Copyright (C) 2012 The R Foundation for Statistical Computing
ISBN 3-900051-07-0

Modifications to R in pqR are Copyright (C) 2013-2017 Radford M. Neal

Some modules are from R-2.15.1 or later versions distributed by the R Core Team

Platform: x86_64-unknown-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.


No helper threads, task merging enabled, uncompressed pointers.

> # Test possible bugs involving 'match', '%in%', 'duplicated', etc.
> # and also which, which.min, and which.max.
> #
> # Added for pqR, 2017, Radford M. Neal.
> 
> # Tests with scalar first operand.
> 
> a <- c("abc","def","hij")
> 
> print(match("def",a))
[1] 2
> print(match("xyz",a))
[1] NA
> print(match("xyz",a,nomatch=77))
[1] 77
> print(match("def",a,incomparables=c("q","def")))
[1] NA
> 
> print("def" %in% a)
[1] TRUE
> print("xyz" %in% a)
[1] FALSE
> 
> # Tests with non-scalar operands.
> 
> b <- c("xyz","def","abc","q")
> 
> print(match(b,a))
[1] NA  2  1 NA
> print(match(b,a,nomatch=77))
[1] 77  2  1 77
> print(match(b,a,nomatch=77,incomparables=c("q","def")))
[1] 77 77  1 77
> 
> print(match(a,b))
[1]  3  2 NA
> print(match(a,b,nomatch=77))
[1]  3  2 77
> print(match(a,b,nomatch=77,incomparables=c("q","def")))
[1]  3 77 77
> 
> x <- c(a,a)
> y <- c(b,b,b)
> 
> print(match(x,b))
[1]  3  2 NA  3  2 NA
> print(match(x,y))
[1]  3  2 NA  3  2 NA
> print(match(y,x))
 [1] NA  2  1 NA NA  2  1 NA NA  2  1 NA
> 
> # Tests of 'duplicated'.
> 
> print(duplicated(a))
[1] FALSE FALSE FALSE
> print(duplicated(x))
[1] FALSE FALSE FALSE  TRUE  TRUE  TRUE
> print(duplicated(b))
[1] FALSE FALSE FALSE FALSE
> print(duplicated(y))
 [1] FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
> 
> # Tests with zero-length vector.
> 
> z <- character(0)
> 
> print(match(z,a))
integer(0)
> print(match(a,z))
[1] NA NA NA
> print(match(z,z))
integer(0)
> 
> print(z %in% a)
logical(0)
> print(a %in% z)
[1] FALSE FALSE FALSE
> print(z %in% z)
logical(0)
> 
> print(duplicated(z))
logical(0)
> 
> # Tests of %in% with any, all, or sum.
> 
> print(any("def" %in% b))
[1] TRUE
> print(any("pqr" %in% b))
[1] FALSE
> print(all("def" %in% b))
[1] TRUE
> print(all("pqr" %in% b))
[1] FALSE
> print(sum("def" %in% b))
[1] 1
> print(sum("pqr" %in% b))
[1] 0
> 
> print(any(a %in% y))
[1] TRUE
> print(all(a %in% y))
[1] FALSE
> print(sum(a %in% y))
[1] 2
> print(all(b %in% y))
[1] TRUE
> 
> print(any(y %in% a))
[1] TRUE
> print(all(y %in% a))
[1] FALSE
> print(sum(y %in% a))
[1] 6
> print(all(y %in% b))
[1] TRUE
> 
> ap <- paste0(a,"Q")
> 
> print(any(ap %in% y))
[1] FALSE
> print(all(ap %in% y))
[1] FALSE
> print(sum(ap %in% y))
[1] 0
> 
> print(any(y %in% ap))
[1] FALSE
> print(all(y %in% ap))
[1] FALSE
> print(sum(y %in% ap))
[1] 0
> 
> # Tests of which.
> 
> print(which(c(NA,TRUE,FALSE,FALSE,TRUE,NA,TRUE)))
[1] 2 5 7
> print(which(c(NA,NA,NA)))
integer(0)
> print(which(logical(0)))
integer(0)
> 
> # Tests of which.min and which.max.
> 
> print(which.min(c(TRUE,TRUE,FALSE,FALSE,TRUE)))
[1] 3
> print(which.min(c(NA,TRUE,TRUE,NA,FALSE,FALSE)))
[1] 5
> print(which.min(c(NA,TRUE,TRUE,NA,TRUE)))
[1] 2
> print(which.min(c(NA,NA,NA)))
integer(0)
> print(which.min(logical(0)))
integer(0)
> 
> print(which.max(c(FALSE,FALSE,TRUE,TRUE,FALSE)))
[1] 3
> print(which.max(c(NA,FALSE,FALSE,NA,TRUE,TRUE)))
[1] 5
> print(which.max(c(NA,FALSE,FALSE,NA,FALSE)))
[1] 2
> print(which.max(c(NA,NA,NA)))
integer(0)
> print(which.max(logical(0)))
integer(0)
> 
> print(which.min(c(7L,2L,-1L,8L)))
[1] 3
> print(which.min(c(NA,7L,2L,NA,-1L,8L)))
[1] 5
> print(which.min(as.integer(c(NA,NA,NA))))
integer(0)
> print(which.min(integer(0)))
integer(0)
> 
> print(which.max(c(7L,2L,-1L,8L)))
[1] 4
> print(which.max(c(NA,7L,2L,NA,-1L,8L)))
[1] 6
> print(which.max(as.integer(c(NA,NA,NA))))
integer(0)
> print(which.max(integer(0)))
integer(0)
> 
> print(which.min(c(7.1,2.1,-1.1,8.1)))
[1] 3
> print(which.min(c(NA,7.1,2.1,NA,-1.1,8.1)))
[1] 5
> print(which.min(as.integer(c(NA,NA,NA))))
integer(0)
> print(which.min(integer(0)))
integer(0)
> 
> print(which.max(c(7.1,2.1,-1.1,8.1)))
[1] 4
> print(which.max(c(NA,7.1,2.1,NA,-1.1,8.1)))
[1] 6
> print(which.max(as.double(c(NA,NA,NA))))
integer(0)
> print(which.max(double(0)))
integer(0)
> 
> print(which.min(c("55","66","22","33")))
[1] 3
> 
> print(which.max(c("55","66","22","33")))
[1] 2
> 
