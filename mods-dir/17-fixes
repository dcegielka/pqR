Various changes/fixes.

Some changes for compatibility with various packages, allowing
more access to internals.

Fixes the following bug:

  f <- function (a) 
  { 
    x <- a
  
    function () { b <- a; b[2]<-1000; a+b  }
  }
  
  g <- f(c(7,8,9))
  
  save.image("tmpimage")
  load("tmpimage")
  
  print(g())
  
where the result printed was 14 2000 18 rather than 14 1008 18.

Fixes bug in prod with integer vector containing NA, eg prod(NA).

Cleaned up code in R_AllocStringBuffer, avoiding potential segfault.

Fixed lack-of-protection bug in mkCharLenCE (showed up in checks for
package cmrutils), other improvements in CHARSXP hashing stuff, made
R_StringHash local to memory.c.

Fixed a problem with xtfrm demonstrated by the following (and
affecting package "lsr"):

  f<-function(...) xtfrm(...); f(c(1,3,2))

Also made related change to "range" to probably make it more robust
(though no actual bad behaviour is apparent).

Fixed bug in maintaining NAMEDCNT when assigning to a variable in
an environment using $ (showed up in check of package 'plus').

Changed the behaviour of "$" when dispatching so that the unevaluated
element name arrives as a string, as in R-2.15.0.  This behaviour is
needed for the "dyn" package.  The issue is illustrated by the
following code:

  a <- list(p=3,q=4)
  class(a) <- "fred"
  `$.fred` <- 
    function (x,n) { print(list(n,substitute(n))); x[[n]] }
  print(a$q)

In R-2.15.0, both elements of the list printed are strings, but in
pqR-2013-12-29, the element from "substitute" is a symbol.  Changed
help("$") to document this behaviour, and the corresponding behaviour
of "$<-".  Added a test with "make check" for it.

Fixed bug that causes the code below to create a circular data structure:

  { a <- list(1); a[[1]] <- a; a }

Fixed bugs such as that below:

  a <- list(list(list(1)))
  b <- a
  a[[1]][[1]][[1]]<-2
  print(b)

Added tests for such bugs.  Introduced a variant scheme into subassign
that may help for further cleanup of subassign/applydefine, but is at
present only used minimally for this fix.

Fixed a bug where unary minus might improperly reuse its operand for
the result even when it was logical - eg, -c(F,T,T,F).

Fixed the following bug (also present in R-2.15.0 and R-3.0.2):

  x <- t(5)
  print (x %*% c(3,4))
  print (crossprod(5,c(3,4)))

The call of crossprod produced an error, whereas the corresponding
use of %*% did not.  

In pqR-2013-12-29, this bug also affected the expression t(5) %*% c(3,4),
since it is converted to the equivalent of crossprod(5,c(3,4)).

Added an option (currently set) for pqR to ignore incorrect zero
pointers encountered by the garbage collector (as R-2.15.0 does).
This avoids crashes with some packages (eg, 'birch') that incorrectly
set up objects with zero pointers.

Now use the ISNAN trick (if enabled) only in the interpreter itself, 
since the macro implementing it evaluates its argument twice, which
doesn't work if it has side effects (as happens in the ff package).

Fixed bug in pairlist element deletion.  Added tests in subset.R
for such cases.

Redefined "fork" to "Rf_fork" so that helper threads can be disabled
in the child when "fork" is used in packages like "multicore".  Took
out previous pqR mods to the "parallel" package that did this just for
it, in favour of using this more universal scheme.

Added apparently missing PROTECT of third argument in setAttrib.  Not
protected by caller in lengthgets, for example, though the fact that
the second argument is a symbol there means no actual bug arises.  The
protect is also missing in R-2.15.0 and R-3.0.2.

Made changes along lines suggested by Yu Gong to fix problems with
building for Windows.

Added kludge to fix problem with making as shared library when
multithreading is disabled.

Fixed bug that sometimes resulted in task merging being disabled when
it shouldn't have been.  Cleaned up some other things with helpers
options.
