Performance optimization / tuning.

Got rid of saving of R_EvalDepth in eval, in favour of increment/decrement.
It's saved and restored in/from contexts anyway.

Put the following global variables that are frequently used into a
structure to ensure reference locality (and possibly allow the
compiler to address faster):

   R_variant_result
   R_Visible
   R_EvalDepth
   R_Expressions
   evalcount (was local to eval.c)
   R_PPStackSize
   R_PPStack
   R_PPStackTop
   R_CStackDir
   R_CStackLimit
   R_CStackThreshold

Eliminate save/restore of R_Srcref in eval, do when modified elsewhere
instead.  It's already saved in contexts for restoration on longjump.

Introduced R_EVAL_TWEAKS, which may be defined by a compiler argument,
to control which tweaks concerning eval are enabled.

Now allow R_CStackDir to be a constant, defined by a compiler
argument, rather than determined at run-time initialization.  It can
be 0 instead of 1 for downward stack, perhaps allowing faster check.

Changed how R_Visible is handled, updating R-ints.texi to explain new
scheme.  This change reduces overhead in eval.
